fullnameOverride: prometheus

prometheus:
  fullnameOverride: prometheus

grafana:
  fullnameOverride: grafana
  service: 
    type: LoadBalancer
  additionalDataSources:
  # https://grafana.com/docs/grafana/latest/datasources/tempo/configure-tempo-data-source/
    - name: Loki
      type: loki
      uid: loki
      url: http://loki.observability.svc.cluster.local:3100
      access: proxy
      editable: true
      jsonData:
        derivedFields:
        - datasourceUid: tempo
          matcherRegex: "\"trace_id\": \"(\\w+)\""
          name: TraceID
          url: "$${__value.raw}"
          urlDisplayLabel: "Tempo - Trace"
      version: 1
    - name: Tempo
      type: tempo
      uid: tempo
      url: http://tempo.observability.svc.cluster.local:3100
      access: proxy
      editable: true
      jsonData:
        tracesToLogsV2:
         # Field with an internal link pointing to a logs data source in Grafana.
         # datasourceUid value must match the uid value of the logs data source.
          datasourceUid: 'loki'
          tags: ['job', 'instance', 'pod', 'namespace']
        tracesToMetrics:
          datasourceUid: 'prometheus'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
          queries:
            - name: 'Sample query'
              query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
        serviceMap:
          datasourceUid: 'prometheus'
        nodeGraph:
          enabled: true
        search:
          hide: false  
        lokiSearch:
          datasourceUid: 'loki'
        traceQuery:
          timeShiftEnabled: true
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
        spanBar:
          type: 'Tag'
          tag: 'http.path'  
      version: 1  


alertmanager:
  fullnameOverride: alertmanager

prometheus-node-exporter:
  fullnameOverride: node-exporter

kube-state-metrics:
  fullnameOverride: kube-state-metrics
